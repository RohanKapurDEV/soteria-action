name: Soteria Scan
author: silas
description: >
  Test Solana smart contract code for common vulnerabilities
branding:
  icon: check-square
  color: gray-dark
inputs:
  solana-version:
    description: "Choose your Solana version to build with"
    required: false
    default: "1.9.4"
  run-mode:
    description: "Command line options for Soteria"
    required: false
    default: "-analyzeAll"
  cargo-com:
    description: "Build command shortcut for: cargo +bpf build --target bpfel-unknown-unknown --release"
    required: false
    default: "."
  never-fail:
    description: "Configure the job to pass even if potential vulnerabilities are discovered"
    required: false
    default: false
  program-path:
    description: "Configure the job to run tests against a program in a subfolder to the root"
    required: false
    default: "."

runs:
  using: composite
  steps:
    - name: Install Solana
      run: | 
        echo Installing Solana v${{ inputs.solana-version }}
        sh -c "$(curl -sSfL https://release.solana.com/v${{ inputs.solana-version }}/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
        export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
        echo Installing bpf SDK...
        cd ${{ inputs.program-path }}
        cargo build-bpf
        solana-keygen new -o "$HOME/.config/solana/id.json" --no-passphrase --silent
      shell: bash
    - name: Install Soteria
      run: | 
        echo Installing Soteria...
        sh -c "$(curl -k https://supercompiler.xyz/install)"
        export PATH=$PWD/soteria-linux-develop/bin/:$PATH
        echo "$PWD/soteria-linux-develop/bin" >> $GITHUB_PATH
      shell: bash
    - name: Run Soteria
      run: |
        cd ${{ inputs.program-path }}
        soteria ${{ inputs.run-mode }} ${{ inputs.cargo-com }}
      shell: bash
    - name: Pass if no break
      if: ${{ inputs.never-fail == 'true' }}
      run: |
        echo The job passed as it was set to never fail!
        exit 0
      shell: bash
    - name: Check scan result
      if: ${{ inputs.never-fail == 'false' }}
      run: |
        echo Checking scan results...
        if grep -q "No vulnerabilities detected"; then
          echo The job passed as no vulnerabilities were found!
          exit 0
        else
          echo The job failed as potential vulnerabilities were found!
          exit 1
        fi
      shell: bash
